This section will guide you to:
●	Configure the grid using JSON

This guide has mainly two sub-sections, namely:
Configuring the grid hub using JSON
 Configuring the grid nodes using JSON
 Pushing the code to your GitHub repositories

 Configuring the grid hub using JSON
a.	Create JSON file for the hub which will look like:
b.	Save it in a folder with a valid name (example: myhub) in which we have saved  Selenium standalone Server jar file.
c.	Go to the command prompt.
d.	Navigate to the folder structure where you have saved the Selenium standalone Server jar file.
e.	Type the below command in the command prompt
        Java -jar selenium-server-standalone-3.141.59.jar -role hub -hubConfig myhub.json and 	click on Enter. It will look like:
 	
 
f.	Open the Chrome browser.
g.	Enter URL as ‘http://localhost:4444/grid/console’ and click on Enter. 
h.	Grid console page is loaded as below.
 

 Configuring the grid nodes using JSON

a.	Once the Selenium Grid Hub using JSON is configured, the next step is to configure Selenium Grid nodes using JSON.
b.	Create a JSON file for node, which will look like:
 
c.	Save it in a folder with a valid name (example: mynode) in which we have saved  Selenium standalone Server jar file.
d.	Open the new command prompt.
e.	Navigate to the folder structure where you have saved the Selenium standalone Server jar file.
f.	Type the below command in the command prompt
              java -Dwebdriver.gecko.driver="geckodriver.exe" -		Dwebdriver.chrome.driver="chromedriver.exe" -jar selenium-server-standalone-3.141.59.jar 	-role node -nodeConfig mynodes.json and click on Enter button, which will look like:
 
g.	Open the browser.
h.	Enter URL as http://localhost:4444/grid/console and click on Enter. 
i.	The Grid console page will get loaded, which shows Browsers by default.	
 
j.	      Click on Configuration which shows the configuration details.
			        		 

: Pushing the code to your GitHub repositories
Open your command prompt and navigate to the folder where you have created your files.
cd <folder path>
Initialize your repository using the following command:
git init
Add all the files to your git repository using the following command:
git add . 
Commit the changes using the following command:
git commit .  -m “Changes have been committed.”
Push the files to the folder you initially created using the following command:
git push -u origin master



